{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCount = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCount.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error(\"could not fetch data from that resource\");\n        }\n        console.log(\"Response\", res);\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError = null;\n      }).catch(err => {\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 1000);\n    return () => abortCount.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCount","AbortController","setTimeout","fetch","signal","then","res","ok","Error","console","log","json","catch","err","name","message","abort"],"sources":["/home/josh/React/dojo-blog/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCount = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCount.signal })\n        .then((res) => {\n          if (!res.ok) {\n            throw Error(\"could not fetch data from that resource\");\n          }\n          console.log(\"Response\", res);\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError = null;\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 1000);\n\n    return () => abortCount.abort();\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,IAAIC,eAAe,EAAE;IAExCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACV,GAAG,EAAE;QAAEW,MAAM,EAAEJ,UAAU,CAACI;MAAO,CAAC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACX,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACxD;QACAC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,GAAG,CAAC;QAC5B,OAAOA,GAAG,CAACK,IAAI,EAAE;MACnB,CAAC,CAAC,CACDN,IAAI,CAAEX,IAAI,IAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,GAAG,IAAI;MACjB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;QACd,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLb,YAAY,CAAC,KAAK,CAAC;UACnBE,QAAQ,CAACc,GAAG,CAACE,OAAO,CAAC;QACvB;MACF,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMf,UAAU,CAACgB,KAAK,EAAE;EACjC,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEC,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAAC,GApCIN,QAAQ;AAsCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}