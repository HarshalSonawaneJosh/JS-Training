{"ast":null,"code":"var _jsxFileName = \"/home/josh/React/react-app2/src/BlogList.js\";\nimport \"./BlogList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = _ref => {\n  let {\n    todos,\n    title,\n    deleteHandle\n  } = _ref;\n  //or const BlogList = (blogs,title)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteHandle(todo.id),\n        children: \"Delete..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type Something\",\n      id: \"title\",\n      value: newToDo,\n      onChange: e => {\n        setNewTODo(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTitle,\n      children: \"Add title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetInputField,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogList","todos","title","deleteHandle","map","todo","id","newToDo","e","setNewTODo","target","value","addTitle","resetInputField"],"sources":["/home/josh/React/react-app2/src/BlogList.js"],"sourcesContent":["import \"./BlogList.css\";\nconst BlogList = ({ todos, title, deleteHandle }) => {\n  //or const BlogList = (blogs,title)\n\n  return (\n    <div className=\"blog-list\">\n      <h1>{title}</h1>\n      {todos.map((todo) => (\n        <div className=\"blog-preview\" key={todo.id}>\n          <h2>{todo.title}</h2>\n          <button onClick={() => deleteHandle(todo.id)}>Delete..</button>\n        </div>\n      ))}\n      <input\n        type=\"text\"\n        placeholder=\"Type Something\"\n        id=\"title\"\n        value={newToDo}\n        onChange={(e) => {\n          setNewTODo(e.target.value);\n        }}\n      />\n      <button onClick={addTitle}>Add title</button>\n      <button onClick={resetInputField}>Reset</button>\n    </div>\n  );\n};\n\nexport default BlogList;\n"],"mappings":";AAAA,OAAO,gBAAgB;AAAC;AACxB,MAAMA,QAAQ,GAAG,QAAoC;EAAA,IAAnC;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAa,CAAC;EAC9C;;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAA,UAAKD;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,EACfD,KAAK,CAACG,GAAG,CAAEC,IAAI,iBACd;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAAKA,IAAI,CAACH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACrB;QAAQ,OAAO,EAAE,MAAMC,YAAY,CAACE,IAAI,CAACC,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA,GAF9BD,IAAI,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAI3C,CAAC,eACF;MACE,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,gBAAgB;MAC5B,EAAE,EAAC,OAAO;MACV,KAAK,EAAEC,OAAQ;MACf,QAAQ,EAAGC,CAAC,IAAK;QACfC,UAAU,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MAC5B;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,OAAO,EAAEC,QAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eAC7C;MAAQ,OAAO,EAAEC,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C;AAEV,CAAC;AAAC,KAzBIb,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}